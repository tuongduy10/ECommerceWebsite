name: Deploy to Plesk

on:
  push:
    branches:
      - deploy/prod
      - workout/cicd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "3.1.x"

      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef --version 3.1.8

      - name: Restore dependencies
        run: dotnet restore ECommerce.WebApp/ECommerce.WebApp.csproj

      - name: Build
        run: dotnet build --configuration Release ECommerce.WebApp/ECommerce.WebApp.csproj --no-restore

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish ECommerce.WebApp/ECommerce.WebApp.csproj

      - name: Save publish output
        uses: actions/upload-artifact@v2
        with:
          name: publish
          path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download publish output
        uses: actions/download-artifact@v2
        with:
          name: publish
          path: ./publish

      - name: Install PowerShell
        uses: actions/setup-powershell@v1
        with:
          pwsh-version: '7.x' # Replace with the version of PowerShell you need

      - name: Deploy to FTP
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          $ftpServer = "${{ secrets.FTP_SERVER }}"
          $ftpUsername = "${{ secrets.FTP_USERNAME }}"
          $ftpPassword = "${{ secrets.FTP_PASSWORD }}"
          
          # FTP connection details
          $ftpUrl = "ftp://$ftpUsername:$ftpPassword@$ftpServer/"
          
          # Local path to your published files
          $localPath = "./publish"
          
          # Remote path on FTP server
          $remotePath = "/httpdocs"
          
          # Create FTP session
          $session = New-Object -TypeName System.Net.WebClient
          $session.Credentials = New-Object System.Net.NetworkCredential($ftpUsername, $ftpPassword)
          
          try {
              # Change to remote directory
              $session.ChangeDirectory($remotePath)
              
              # Upload files
              $files = Get-ChildItem -Path $localPath -Recurse -File
              foreach ($file in $files) {
                  $remoteFile = ($remotePath + $file.FullName.Substring($localPath.Length)).Replace("\", "/")
                  Write-Output "Uploading $($file.FullName) to $($remoteFile)"
                  $session.UploadFile($file.FullName, $remoteFile)
              }
          }
          finally {
              # Dispose of the FTP session
              $session.Dispose()
          }